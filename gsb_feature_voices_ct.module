<?php
/**
 * @file
 * Code for the GSB Feature Voices CT feature.
 */

include_once 'gsb_feature_voices_ct.features.inc';

/**
 * Implements hook_form_alter().
 *
 * Update form based on taxonomy options.
 *
 * @param $form
 * @param $form_state
 */
function gsb_feature_voices_ct_form_alter(&$form, &$form_state) {

  if ($form['#form_id'] == 'voices_node_form') {
    drupal_add_css(
      'form#voices-node-form .form-radios span.form-required { display: none !important; }',
      array('group' => 'gsb_theme_admin', 'type' => 'inline')
    );

    // Do not show programs unless 'mentioned' checkbox is selected
    $form['field_program_unlimited']['#states'] = [
      'invisible' => [
        ':input[name="field_alumni_story[und]"]' => array('checked' => FALSE),
      ]
    ];

    // Hide n/a option from exec-ed subtype selection
    unset($form['field_person_type_execed']['und']['#options']['_none']);
    unset($form['field_field_of_study']['und']['#options']['_none']);

    // Get the list of taxonomy terms and set conditions
    $person_types_index = $form['field_person_type']['und']['#options'];
    foreach ($person_types_index as $key => $person_type) {
      if ($person_type == 'MBA Student') {

      } elseif ($person_type == 'Sloan Fellow') {

        $field_condition['field_title_position_single'][] = array('value' => $key);

      } elseif ($person_type == 'PhD Student') {

        $field_condition['field_field_of_study'][] = array('value' => $key);

      } elseif ($person_type == 'MBA Alumni' || $person_type == 'MSx/Sloan Alumni') {

        $field_condition['field_title_position_single'][] = array('value' => $key);
        $field_condition['field_alumni_directory_link'][] = array('value' => $key);

      } elseif ($person_type == 'Executive Education Participant') {

        $field_condition['field_title_position_single'][] = array('value' => $key);
        $field_condition['field_program_attended'][] = array('value' => $key);
        $field_condition['field_alumni_directory_link'][] = array('value' => $key);
        $field_condition['field_person_type_execed'][] = array('value' => $key);

      } elseif ($person_type == 'Seed Transformation Program Participant') {

        $field_condition['field_title_position_single'][] = array('value' => $key);
        $field_condition['field_program_attended'][] = array('value' => $key);

      } elseif ($person_type == 'Faculty') {

        $field_condition_hidden['field_first_name'][] = array('value' => $key);
        $field_condition_hidden['field_last_name'][] = array('value' => $key);
        $field_condition_hidden['field_degree_year'][] = array('value' => $key);
        $field_condition_hidden['field_profile_photo'][] = array('value' => $key);
        $field_condition_hidden_opt['field_profile_links'][] = array('value' => $key);
        $field_condition_hidden_opt['field_centers_research_programs'][] = array('value' => $key);
        $field_condition['field_person_fac_single_ref'][] = array('value' => $key);

      } else {
        drupal_set_message('Selected taxonomy term not defined in gsb_features_voices_ct', 'error');
      }
    }

    foreach($field_condition as $field => $condition) {
      $form[$field]['#states'] = [
        'visible' => [
          ':input[name="field_person_type[und]"]' => $field_condition[$field],
        ],
        'required' => [
          ':input[name="field_person_type[und]"]' => $field_condition[$field],
        ]
      ];
    }

    foreach($field_condition_hidden_opt as $field => $condition) {
      $form[$field]['#states'] = [
        'invisible' => [
          ':input[name="field_person_type[und]"]' => $field_condition_hidden_opt[$field],
        ],
      ];
    }

    if(isset($field_condition_hidden)){
      foreach ($field_condition_hidden as $field => $condition) {
        $form[$field]['#states'] = [
          'invisible' => [
            ':input[name="field_person_type[und]"]' => $field_condition_hidden[$field],
          ],
          'optional' => [
            ':input[name="field_person_type[und]"]' => $field_condition_hidden[$field],
          ]
        ];
      }
    };

    drupal_add_js(drupal_get_path('module', 'gsb_feature_voices_ct') . '/js/gsb_feature_voices_ct.js');
  }

};

/**
  * Implements hook_form_FORM_ID_alter().
  */
function gsb_feature_voices_ct_form_views_content_views_panes_content_type_edit_form_alter(&$form, &$form_state) {
  // Add CTA - News:Home Page Two Across
 // dpm($form_state);
  if ($form_state['view']->name == 'gsb_voices_listing' && $form_state['view']->current_display == 'panel_pane_1') {
    if ($form_state['pane']->subtype == 'gsb_voices_listing-panel_pane_1') {
      $conf = $form_state['conf'];

      $form['CTA'] = array(
        '#type' => 'fieldset',
        '#title' => t('CTA'),
      );
      $form['CTA']['cta_title'] = array(
        '#title' => t('Text'),
        '#type' => 'textfield',
        '#description' => 'Enter an action statement.',
        '#weight' => 1,
        '#default_value' => !empty($conf['cta_title']) ? $conf['cta_title'] : '',
      );
      $form['CTA']['cta_url'] = array(
        '#title' => t('URL'),
        '#type' => 'textfield',
        '#weight' => 2,
        '#default_value' => !empty($conf['cta_url']) ? $conf['cta_url'] : '',
      );
    }
    $form['#validate'][] = 'gsb_feature_voices_pane_config_validate';
    $form['#submit'][] = 'gsb_feature_voices_pane_config_submit';
  }
}

/**
 * Implements hook_form_FORM_ID_validate().
 */
function gsb_feature_voices_pane_config_validate($form, &$form_state) {
  if ($form_state['values']['cta_title'] != '' && $form_state['values']['cta_url'] == '') {
    form_set_error('cta_url', t('CTA Url is required.'));
  }
  if ($form_state['values']['cta_title'] == '' && $form_state['values']['cta_url'] != '') {
    form_set_error('cta_title', t('CTA title is required.'));
  }
}

/**
 * Submit handler for views_content_views_panes_content_type_edit_form.
 *  - Save title link field in pane config.
 */
function gsb_feature_voices_pane_config_submit($form, &$form_state) {
   $form_state['conf']['cta_url'] = $form_state['values']['cta_url'];
   $form_state['conf']['cta_title'] = $form_state['values']['cta_title'];
}

/**
 * Implements hook_panels_pane_content_alter().
 *  - Alter News by Criteria content pane title to be linked to a custom URL.
 */
function gsb_feature_voices_ct_panels_pane_content_alter($content, $pane, $args, $context) {
  if ($content && $content->subtype == 'gsb_voices_listing-panel_pane_1') {
    if (!empty($pane->configuration['cta_title'])) {
      $url_parts = drupal_parse_url($pane->configuration['cta_url']);
      $url_parts['html'] = TRUE;
      $content->content['#markup'] .= '<div class="homepage_voices_cta">' . l($pane->configuration['cta_title'], $url_parts['path'], $url_parts) . '</div>';
    }
  }
}

/**
 * Implements hook_node_view().
 */
function gsb_feature_voices_ct_node_view($node, $view_mode, $langcode) {
  // Only process voices.
  if ($node->type != 'voices') {
    return;
  }

  $person_type = array('42756', '42761', '42766', '42771');
  if (in_array($node->field_person_type[$node->language][0]['tid'], $person_type)) {
    $node->content['field_location']['#title'] = 'Location';
  }
}
